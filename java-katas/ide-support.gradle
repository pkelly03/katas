allprojects {
    apply plugin: 'idea'
    ext.xml = { String rawXml ->
        new XmlParser().parseText(rawXml)
    }
}

idea.project {
    ipr.withXml { provider ->
        String vcs = 'Git'

        if (vcs) {
            def vcsConfig = provider.asNode().component.find { it.'@name' == 'VcsDirectoryMappings' }
            vcsConfig.mapping[0].'@vcs' = vcs
	        vcsConfig.mapping[0].'@directory' = '$PROJECT_DIR$/..' //for this project only
        }

        Node customInspections = project.xml '''
            <component name="InspectionProjectProfileManager">
                <profiles>
                  <profile version="1.0" is_locked="false">
                    <option name="myName" value="Project Default" />
                    <option name="myLocal" value="false" />
                    <inspection_tool class="GrMethodMayBeStatic" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
                  </profile>
                </profiles>
                <option name="PROJECT_PROFILE" value="Project Default" />
                <option name="USE_PROJECT_PROFILE" value="true" />
                <version value="1.0" />
              </component>
        '''

        provider.asNode().append(customInspections)
    }
}

idea.workspace {
    iws.withXml { provider ->
        def runManagerComponent = provider.asNode().component.find { it.'@name' == 'RunManager'}
        def defaultJunitConfig = runManagerComponent.configuration.find {(it.'@default' == 'true') && (it.'@type' == 'JUnit')}
        defaultJunitConfig.option.find {it.'@name' == 'WORKING_DIRECTORY'}.'@value' = '$MODULE_DIR$'
        if (System.getenv('JAVA_OPTS')) {
            defaultJunitConfig.option.find {it.'@name' == 'VM_PARAMETERS'}.'@value' = System.getenv('JAVA_OPTS')
        } else {
            println("**** JAVA_OPTS not set *****")
            println("Consider adding \"JAVA_OPTS='-Xms2048m -Xrs -XX:MaxPermSize=512m'\" to /etc/environment.")
            sleep(5000)
        }

        def defaultTestNGConfig = runManagerComponent.appendNode('configuration', [default: 'true', type: 'TestNG', factoryName: 'TestNG'])
        defaultTestNGConfig.appendNode('option', [name: 'WORKING_DIRECTORY', value: '$MODULE_DIR$'])
    }
}
